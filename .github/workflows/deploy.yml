name: Django CD
# 只有在 CI 的 workflow 完成時才會執行此 workflow
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
on:
  workflow_run:
    workflows: [ Django CI ]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    # 注意前面 workflow_run 的 completed 意思是「完成」，不論執行結果成功或是失敗都算是「完成」
    # 但是一般來說測試如果失敗就應該暫停部屬至正式環境
    # 因此這裡加上一個 if 判斷，只有 CI 成功才會執行此 workflow
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - run: echo "tests workflow is ${{ github.event.workflow_run.conclusion }}"

      - name: Checkout
        uses: actions/checkout@v3

      # 使用 appleboy/ssh-action@master 這個 action 遠端連線至正式環境
      # https://github.com/appleboy/ssh-action
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.TOKEN }}
          username: ec2-user
          # 執行部屬的指令
          script: | 
            whoami
          # 安裝環境
            sudo yum -y groupinstall 'Development Tools'
            sudo yum -y install nginx
            sudo yum -y git
            cd /home/ec2-user
            git clone https://github.com/m124578n/testCICD_stage2.git
            python3 -m venv venv
            source /home/ec2-user/venv/bin/activate
            python -V
            pip install -r requirements.txt
          # sqlite3 更新
            cd /usr/local/src
            wget http://www.sqlite.org/2021/sqlite-autoconf-3360000.tar.gz
            tar -zxvf sqlite-autoconf-3360000.tar.gz
            cd sqlite-autoconf-3360000
            ./configure --prefix=/usr/local/sqlite
            make && make install

            mv /usr/bin/sqlite3 /usr/bin/sqlite3_bak
            cd /usr/local/sqlite/bin/
            ln -s sqlite3 /usr/bin/sqlite3

            echo export LD_LIBRARY_PATH="/usr/local/sqlite/lib" >> ~/.bashrc
            source ~/.bashrc

            mv /usr/lib64/libsqlite3.so.0 /usr/lib64/libsqlite3.so.0_old
            ln -s /usr/local/sqlite/lib/libsqlite3.so.0.8.6 /usr/lib64/libsqlite3.so.0

            cd /home/ec2-user/testCICD_stage2
            python3 manage.py makemigrations
            python3 manage.py migrate
            
          # 更換設定檔
            cp /home/ec2-user/testCICD_stage2/nginx.conf /etc/nginx
            cp /home/ec2-user/testCICD_stage2/uwsgi.service /etc/systemd/system
            cp /home/ec2-user/testCICD_stage2/sites-available /ect/nginx
            cp /home/ec2-user/testCICD_stage2/sites-enabled /ect/nginx
            sudo systemctl daemon-reload
            sudo systemctl restart nginx.service
            sudo systemctl restart uwsgi.service
            


            
